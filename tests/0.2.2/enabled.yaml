---
version: 0.2.2
function: enabled
tests:
  - cases:

    ################
    ## ALWAYS_ON ##
    ################

    - name: returns the correct value for a simple flag
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.simple"
      expected:
        value: true

    - name: always returns false for a non-boolean flag
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.integer"
      expected:
        value: false


    #####################
    ## PROP_IS_ONE_OF ##
    #####################

    - name: returns true for a PROP_IS_ONE_OF rule when any prop matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.properties.positive"
        context:
          "":
            name: "michael"
            domain: "something.com"
      expected:
        value: true

    - name: returns false for a PROP_IS_ONE_OF rule when no prop matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.properties.positive"
        context:
          "":
            name: "lauren"
            domain: "something.com"
      expected:
        value: false

    #########################
    ## PROP_IS_NOT_ONE_OF ##
    #########################

    - name: returns true for a PROP_IS_NOT_ONE_OF rule when any prop doesn't match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.properties.negative"
        context:
          "":
            name: "lauren"
            domain: "prefab.cloud"
      expected:
        value: true

    - name: returns false for a PROP_IS_NOT_ONE_OF rule when all props match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.properties.negative"
        context:
          "":
            name: "michael"
            domain: "prefab.cloud"
      expected:
        value: false

    ############################
    ## PROP_ENDS_WITH_ONE_OF ##
    ############################

    - name: returns true for PROP_ENDS_WITH_ONE_OF rule when the given prop has a matching suffix
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.ends-with-one-of.positive"
        context:
          "":
            email: "jeff@prefab.cloud"
      expected:
        value: true

    - name: returns false for PROP_ENDS_WITH_ONE_OF rule when the given prop doesn't have a matching suffix
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.ends-with-one-of.positive"
        context:
          "":
            email: "jeff@test.com"
      expected:
        value: false

    #####################################
    ## PROP_DOES_NOT_END_WITH_ONE_OF ##
    #####################################

    - name: returns true for PROP_DOES_NOT_END_WITH_ONE_OF rule when the given prop doesn't have a matching suffix
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.ends-with-one-of.negative"
        context:
          "":
            email: "michael@test.com"
      expected:
        value: true

    - name: returns false for PROP_DOES_NOT_END_WITH_ONE_OF rule when the given prop has a matching suffix
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.ends-with-one-of.negative"
        context:
          "":
            email: "michael@prefab.cloud"
      expected:
        value: false

    #############
    ## IN_SEG ##
    #############

    - name: returns true for IN_SEG when the segment rule matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-segment.positive"
        context:
          user:
            key: "lauren"
      expected:
        value: true

    - name: returns false for IN_SEG when the segment rule doesn't match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-segment.positive"
        context:
          user:
            key: "josh"
      expected:
        value: false

    - name: returns false for IN_SEG if any segment rule fails to match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-seg.segment-and"
        context:
          user:
            key: "josh"
          "":
            domain: "prefab.cloud"
      expected:
        value: false

    - name: returns true for IN_SEG (segment-and) if all rules matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-seg.segment-and"
        context:
          user:
            key: "michael"
          "":
            domain: "prefab.cloud"
      expected:
        value: true

    - name: returns true for IN_SEG (segment-or) if any segment rule matches (lookup)
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-seg.segment-or"
        context:
          user:
            key: "michael"
          "":
            domain: "example.com"
      expected:
        value: true

    - name: returns true for IN_SEG (segment-or) if any segment rule matches (prop)
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-seg.segment-or"
        context:
          user:
            key: "nobody"
          "":
            domain: "gmail.com"
      expected:
        value: true

    #################
    ## NOT_IN_SEG ##
    #################

    - name: returns true for NOT_IN_SEG when the segment rule doesn't match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-segment.negative"
        context:
          user:
            key: "josh"
      expected:
        value: true

    - name: returns false for NOT_IN_SEG when the segment rule matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-segment.negative"
        context:
          user:
            key: "michael"
      expected:
        value: false

    - name: returns false for NOT_IN_SEG if any segment rule matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-segment.multiple-criteria.negative"
        context:
          user:
            key: "josh"
          "":
            domain: "prefab.cloud"
      expected:
        value: true

    - name: returns true for NOT_IN_SEG if no segment rule matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-segment.multiple-criteria.negative"
        context:
          user:
            key: "josh"
          "":
            domain: "something.com"
      expected:
        value: true

    - name: returns true for NOT_IN_SEG (segment-and) if not segment rule fails to match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.not-in-seg.segment-and"
        context:
          user:
            key: "josh"
          "":
            domain: "prefab.cloud"
      expected:
        value: true

    - name: returns true for IN_SEG (segment-and) if not segment rule fails to match
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.in-seg.segment-and"
        context:
          user:
            key: "josh"
          "":
            domain: "prefab.cloud"
      expected:
        value: false

    - name: returns false for NOT_IN_SEG (segment-and) if segment rules matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.not-in-seg.segment-and"
        context:
          user:
            key: "michael"
          "":
            domain: "prefab.cloud"
      expected:
        value: false

    - name: returns true for NOT_IN_SEG (segment-or) if no segment rule matches
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.not-in-seg.segment-or"
        context:
          user:
            key: "nobody"
          "":
            domain: "example.com"
      expected:
        value: true

    - name: returns false for NOT_IN_SEG (segment-or) if one segment rule matches (prop)
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.not-in-seg.segment-or"
        context:
          user:
            key: "nobody"
          "":
            domain: "gmail.com"
      expected:
        value: false

    - name: returns false for NOT_IN_SEG (segment-or) if one segment rule matches (lookup)
      client: feature_flag_client
      function: enabled
      input:
        flag: "feature-flag.not-in-seg.segment-or"
        context:
          user:
            key: "michael"
          "":
            domain: "example.com"
      expected:
        value: false
